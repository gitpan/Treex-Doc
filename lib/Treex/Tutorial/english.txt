In the rest I expect Linux OS (Windows+StrawberryPerl or MacOS are also possible, but not tested).
Perl 5.10 or higher is needed. (See http://www.perlbrew.pl -- admin-free perl installation management tool.)
I expect basic knowledge how to install Perl modules using CPAN, basically:
run "cpan" CLI (command line interface); the first run will setup several options.
Consider prerequisites_policy = follow, so you don't have to press Enter for each dependency module (you'll need to install many dependencies).
If you decide for admin-free installation with Perl modules stored in a directory of your choice (e.g. ~/my_perl) instead of the system-wide (/usr/...),
you should set the $PERL5LIB environment variable (add "export PERL5LIB=$HOME/my_perl:$PERL5LIB" to your ~/.bashrc).

1) Install the Bundle::CPAN and Term::ReadLine::Perl Perl modules from CPAN.
   From the command line you can just type:
     cpan Bundle::CPAN Term::ReadLine::Perl
   This step is optional. You can use up/down keys for browsing history in the "cpan" CLI.

2) To be able to install the modules in step 3, you need some C header files, which can be missing on your system.
   For Ubuntu/Debian, you can use
     sudo apt-get install libx11-dev libxft-dev libfontconfig1-dev libpng12-dev zlib1g-dev libxml2-dev
   For other distros, the names of the packages may be different.

3) Install three more modules (including their dependencies) from CPAN:
     cpan Moose XML::LibXML Treex::PML
   (There may be problems with installing these modules, so it is better to try it first. Also the installing will take some time.)

4) Optionally, if you want to visualize the trees in TrEd (Tree Editor), install it from http://ufal.mff.cuni.cz/tred
   You can instruct the installer script (install_tred.bash) to install the dependencies to your dir (~/my_perl).

5) Install additional modules from CPAN:
     cpan MooseX::Getopt MooseX::NonMoose MooseX::Params::Validate\
         MooseX::SemiAffordanceAccessor Readonly\
         File::Slurp File::HomeDir File::Path File::ShareDir\
         LWP::Simple Data::Dumper Module::Reload Locale::Language\
         Parse::RecDescent Cwd Scalar::Util autodie String::Util
   
   Note: If you later try to run a perl script (or treex) and it fails with a message containing something like
   "Can't locate String/Util.pm in @INC (@INC contains: ...)"
   you should check whether the module in question (String::Util in this example) is installed
    * perl -MString::Util -e 'print "ok\n"'
    * or run the cpan CLI and type "m String::Util" to see the installed version and the newest version on CPAN
   Usually, it is the case that you just need to install it via cpan
     cpan String::Util
    
6) Check out the Treex framework from svn repository:
    cd ~
    svn --username public co https://svn.ms.mff.cuni.cz/svn/tectomt_devel/trunk tectomt
    # password is "public"
    # Of course, you can choose whatever directory you want, but this way it is in ~/tectomt
   
   Most of the files needed are in "treex" subdirectory, but make it simple let's download the whole trunk (more than 1GiB).
   If you want to save your disk space, you can checkout just trunk/treex and trunk/libs/other.

7) Adjust PERL5LIB and PATH variables by adding the following lines to your ~/.bashrc
    export TMT_ROOT=${HOME}/tectomt/
    export PATH="${TMT_ROOT%/}/treex/bin:$PATH"
    export PERL5LIB="${TMT_ROOT%/}/treex/lib:${TMT_ROOT%/}/libs/other:$PERL5LIB"
    export PERLLIB=$PERL5LIB   

8) source ~/.bashrc # or open a new terminal.
   Check that Treex is installed by running:
     treex -h 

9) Some Treex applications use huge pre-trained models, dictionaries etc.
   These resources are stored in an unversioned directory $TMT_ROOT/share
   and they should be automatically downloaded when running the respective application.
   You should create the empty directory or symlink.
     mkdir $TMT_ROOT/share
     #ln -s /mnt/my_big_disk/tectomt_share $TMT_ROOT/share

   Similarly, some applications need a directory for temporary files.
     ln -s /tmp $TMT_ROOT/tmp
     #mkdir $TMT_ROOT/tmp

   If you want to view trees in TrEd (using ttred wrapper = Treex-modified TrEd),
   create a symlink $TMT_ROOT/share/tred pointing to the directory where TrEd is installed.

10) Install XS-based modules.
    Morce is a high-quality part-of-speech tagger for English. You can install it by: 

    cd $TMT_ROOT/libs/packaged/Morce-English
    less INSTALL
    # follow the instruction in INSTALL

    In the same way, you can install CzechMorpho and Morce-Czech (in this order).

11) You can read (unfinished) Treex tutorial by
      perldoc Treex::Tutorial

12) Try to run English analysis by
      cd $TMT_ROOT/treex/devel/analysis/en
      make all

    It may be the case that some pre-trained models are missing,
    but the automatic download code (require_file_from_share method) was not yet added to the modules/blocks in question.
    Similarly, you some third-party tools (e.g. Java-based MST parser) may be missing.
    You can download those manually from http://ufallab.ms.mff.cuni.cz/tectomt/share/ (and read the licenses :-).

13) You can try TectoMT English-to-Czech translation by
      cd $TMT_ROOT/treex/devel/en2cs
      make help # usage info
      make in   # before this you'll need to download the input sgm files, or set INPUT_SGM_CS and INPUT_SGM_EN
      make test # translate just one file
    The best scenario needs 10 GiB of memory, but by choosing smaller models it can be cut down to about 2 GiB.
      #make translate # you need SGE cluster for this, or delete the -p (--parallel) option.
    It's still an experimental system -- not expected to work out-of-the-box, but I hope we'll be able to solve all the errors.